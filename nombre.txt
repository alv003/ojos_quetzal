import numpy as np
import cv2
import matplotlib.pyplot as plt

# Cargar las imÃ¡genes
image1 = cv2.imread(r'WhatsApp Image 2024-05-28 at 17.12.07.jpeg')
image2 = cv2.imread(r'WhatsApp Image 2024-05-28 at 17.13.23.jpeg')



if image1.shape != image2.shape:
    # Resize the smaller image to match the larger one
    (h, w) = np.maximum(image1.shape[:2], image2.shape[:2])
    image1 = cv2.resize(image1, (w, h))
    image2 = cv2.resize(image2, (w, h))

if image1.shape[-1] == 3:  # Check if image1 has 3 channels (RGB)
    image1 = cv2.cvtColor(image1, cv2.COLOR_BGR2RGBA)  # Convert to RGBA if RGB
    image2 = cv2.cvtColor(image2, cv2.COLOR_BGR2RGBA)  # Convert to RGBA if RGB

# Set alpha channel (transparency) of image2 (adjust alpha values as needed)
image2[:, :, 3] = (image2[:, :, 0] > 128) * 255  # Example: Make dark areas of image2 transparent
# Crear una imagen en blanco
result_width = image1.shape[1] + image2.shape[1]
result_height = max(image1.shape[0], image2.shape[0])
result_img = np.zeros((result_height, result_width, 4), dtype=np.uint8)  # Explicitly allocate 4 channels and set data type

# Overlay with transparency
result_img[:image1.shape[0], :image1.shape[1], :] = image1
result_img[:image2.shape[0], :image2.shape[1], :4] = image2


result_img = result_img.astype(np.uint8)
result_img = cv2.cvtColor(result_img, cv2.COLOR_RGBA2BGRA)



# Mostrar la imagen
plt.imshow(result_img)
plt.show()
